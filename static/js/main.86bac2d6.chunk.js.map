{"version":3,"sources":["components/DataTable.jsx","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DataTable","props","_this","Object","classCallCheck","this","_super","call","firebase","length","state","storage","storageRef","storageFileListRef","firestore","firestoreFileCollection","newFile","file","description","username","ref","child","collection","fileInput","React","createRef","handleUploadFileChange","bind","assertThisInitialized","handleUpload","handleDelete","resetInputKey","signInAnonymously","then","result","console","log","getFileList","_this2","onSnapshot","querySnapshot","filesData","forEach","doc","push","name","data","uploadedBy","createdAt","id","type","filePath","setState","e","newFileState","target","value","_this3","preventDefault","current","files","fileName","fileType","concat","put","uploadedFile","metadata","fullPath","fileCreatedAt","updated","add","docID","_this4","delete","getDownloadURL","url","window","open","randomString","Math","random","toString","fileFieldKey","_this5","react_default","a","createElement","className","map","key","href","onClick","handleShowFile","split","action","placeholder","onChange","accept","Component","App","components_DataTable","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.86bac2d6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDpcKnCM6_nrRXJ1hSLtteThHb9Txhb04M',\n  authDomain: 'prototyp-1fee0.firebaseapp.com',\n  databaseURL: 'https://prototyp-1fee0.firebaseio.com',\n  projectId: 'prototyp-1fee0',\n  storageBucket: 'gs://prototyp-1fee0.appspot.com/',\n  messagingSenderId: '726974774495',\n  appId: '1:726974774495:web:9295ebd10de056f9f6bd6a'\n}\n\n\nclass DataTable extends Component {\n\n  constructor(props) {\n    super (props)\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig)\n    }\n\n    this.state = {\n      storage: '',\n      storageRef: '',\n      storageFileListRef: '',\n      firestore: '',\n      firestoreFileCollection: '',\n      newFile: {\n        file: '',\n        description: '',\n        username: ''\n      }\n    }\n\n    // firebase\n    this.storage = firebase.storage()\n    this.storageRef = this.storage.ref()\n    this.storageFileListRef = this.storageRef.child('files')\n    this.firestore = firebase.firestore()\n    this.firestoreFileCollection = this.firestore.collection('files')\n\n    // file input ref\n    this.fileInput = React.createRef()\n\n    this.handleUploadFileChange = this.handleUploadFileChange.bind(this)\n    this.handleUpload = this.handleUpload.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.resetInputKey = this.resetInputKey.bind(this)\n  }\n\n  UNSAFE_componentWillMount() {\n    firebase.auth().signInAnonymously().then( result => {\n      console.log('signed in as anon')\n    })\n\n    this.getFileList()\n  }\n\n  getFileList() {\n\n    // listen for changes in collection and update\n    // state if entries added or removed\n    this.firestoreFileCollection.onSnapshot( querySnapshot => {\n      let filesData = []\n      querySnapshot.forEach( doc => {\n        filesData.push({\n          name: doc.data().name,\n          description: doc.data().description,\n          uploadedBy: doc.data().uploadedBy,\n          createdAt: doc.data().createdAt,\n          id: doc.id,\n          type: doc.data().type,\n          filePath: doc.data().filePath\n        })\n      })\n      this.setState({\n        data: filesData\n      })\n    })\n  }\n\n  handleUploadFileChange(e) {\n    let newFileState = this.state.newFile\n    \n    switch (e.target.id) {\n      case 'username':\n        newFileState.username = e.target.value\n        break\n      case 'description':\n        newFileState.description = e.target.value\n        break\n      default:\n        break\n    }\n\n    this.setState({\n      newFile: newFileState\n    })\n  }\n\n  handleUpload(e) {\n    e.preventDefault()\n\n    const file = this.fileInput.current.files[0]\n    if (!file)\n      return\n    \n    const username = this.state.newFile.username\n    const description = this.state.newFile.description\n    const fileName = this.fileInput.current.files[0].name\n    const fileType = this.fileInput.current.files[0].type\n    const newFileCollectionRef = this.storageRef.child(`files/${fileName}`)\n\n    // upload file first to storage to get file path\n    newFileCollectionRef.put(file).then( uploadedFile => {\n      const filePath = uploadedFile.metadata.fullPath\n      const fileCreatedAt = uploadedFile.metadata.updated\n\n      // upload metadata obj to firestore\n      this.firestoreFileCollection.add({\n        createdAt: fileCreatedAt,\n        filePath: filePath,\n        name: fileName,\n        description: description,\n        type: fileType,\n        uploadedBy: username\n      }).then( result => {\n        // reset file input field\n        // to clear input\n        this.resetInputKey()\n\n        this.setState({\n          newFile: {\n            file: '',\n            description: '',\n            username: ''\n          }\n        })\n      })\n\n    })\n  }\n\n  // delete metadata from filestore\n  // and file from storage\n  handleDelete(docID, filePath) {\n    // delete metadata in firestore\n    this.firestoreFileCollection.doc(docID).delete().then( () => {\n      // delete file \n      this.storageRef.child(filePath).delete()  \n    })\n  }\n\n  // ugly handle but what the hell\n  // it's just a prototype ;)\n  // path should be set as link in <a> but\n  // choose to not do it cuz I didn't want to get stuck\n  // solving the promise, hope it's ok!\n  handleShowFile(filePath) {\n    this.storageRef.child(filePath).getDownloadURL().then( url => {\n      window.open(url, '_blank')\n    })\n  }\n\n  // force input field to reset\n  // and re-render\n  resetInputKey() {\n    const randomString = Math.random().toString(36)\n    this.setState({\n      fileFieldKey: randomString\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"data-table\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <h1 className=\"center\">File Manager</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <table>\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Filename</th>\n                  <th>Description</th>\n                  <th>Uploaded by</th>\n                  <th>Date</th>\n                  <th></th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {this.state.data ? this.state.data.map( file => {\n                  return (\n                    <tr key={file.id}>\n                      <td>\n                        {file.type === 'application/pdf' ? \n                          <i className=\"material-icons\">picture_as_pdf</i> : \n                        ''}\n                        {file.type === 'image/jpeg' ? \n                          <i className=\"material-icons\">image</i> : \n                        ''}\n                        {file.type === 'text/xml' ? \n                          <i className=\"material-icons\">description</i> : \n                        ''}\n                      </td>\n                      <td><a href=\"#\" onClick={this.handleShowFile.bind(this, file.filePath)}>{file.name}</a></td>\n                      <td>{file.description}</td>\n                      <td>{file.uploadedBy}</td>\n                      <td>{file.createdAt.split('T')[0]}</td>\n                      <td><a href=\"#\" onClick={this.handleDelete.bind(this, file.id, file.filePath)}>Delete</a></td>\n                    </tr>)\n                }) : null}\n              </tbody>\n            </table>\n            {this.state.data && !this.state.data.length ? <p>No entries, pls upload files.</p> : ''}\n          </div>\n        </div>\n        <div className= \"row\">\n          <form className=\"col s12\" action=\"#\">\n              <div className=\"row\">\n                <h6 className=\"center\">Upload file</h6>\n                <div className=\"input-field col s4\">\n                  <input \n                    placeholder=\"Username\" \n                    id=\"username\" \n                    type=\"text\" \n                    className=\"\"\n                    value={this.state.newFile.username}\n                    onChange={this.handleUploadFileChange} \n                  />\n                </div>\n                <div className=\"input-field col s4\">\n                  <input \n                    placeholder=\"Description\"\n                    id=\"description\"\n                    type=\"text\"\n                    className=\"\"\n                    value={this.state.newFile.description}\n                    onChange={this.handleUploadFileChange}\n                  />\n                </div>\n                <div className=\"file-field input-field col s4\">\n                  <div className=\"file-path-wrapper\">\n                    <input \n                      type=\"file\"\n                      ref={this.fileInput}\n                      accept=\".xml, .pdf, .jpeg\"\n                    />\n                    <input \n                      className=\"file-path \"\n                      id=\"choose-file\"\n                      type=\"text\"\n                      placeholder=\"Choose file\"\n                      key={this.state.fileFieldKey || '' }\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-field col s12 center\">\n                  <button \n                    className=\"btn waves-effect waves-light\" \n                    type=\"submit\" \n                    name=\"action\"\n                    onClick={this.handleUpload}\n                  >\n                    Upload\n                  </button> \n                </div>\n              </div>\n            </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DataTable","import React, { Component } from 'react'\nimport './stylesheets/App.scss'\nimport DataTable from './components/DataTable'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <DataTable />\n      </div>\n    );\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'materialize-css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}